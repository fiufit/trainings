// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/{version}/goals": {
            "get": {
                "description": "Get goals  with pagination filtered by their deadline, type, subtype for a given userID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "goals"
                ],
                "summary": "Get goals by different query params with pagination",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Goal Type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Goal Subtype",
                        "name": "subtype",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Goal Deadline",
                        "name": "deadline",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/goals.GetGoalsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new training goal for a given userID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "goals"
                ],
                "summary": "Creates a new goal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/goals.CreateGoalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/models.Goal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        },
        "/{version}/goals/{goalID}": {
            "get": {
                "description": "Gets a goal for a given goalID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "goals"
                ],
                "summary": "Gets a goal by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Goal ID",
                        "name": "goalID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/models.Goal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a goal for a given goalID, validating that the goal belongs to the userID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "goals"
                ],
                "summary": "Deletes a goal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Goal ID",
                        "name": "goalID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/goals.DeleteGoalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a goal for a given goalID, validating that the goal was created by the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "goals"
                ],
                "summary": "Updates a goal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Goal ID",
                        "name": "goalID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/goals.UpdateGoalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        },
        "/{version}/training_sessions": {
            "get": {
                "description": "Gets all training sessions of a user for a given training plan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "training_sessions"
                ],
                "summary": "Get training sessions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Training Plan ID",
                        "name": "trainingID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/training_sessions.GetTrainingSessionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new review with a comment and a score for a given trainingPlanID and userID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "training_sessions"
                ],
                "summary": "Creates a new training session of a training plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Training Plan ID",
                        "name": "trainingID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/training_sessions.CreateTrainingSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        },
        "/{version}/training_sessions{trainingSessionID}": {
            "get": {
                "description": "Gets a training session by ID, validating that the requester has access to it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "training_sessions"
                ],
                "summary": "Gets a training session by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Training Session ID",
                        "name": "trainingSessionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Requester User ID",
                        "name": "requesterID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/models.TrainingSession"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the progress of a training session, including the exercises and the step and minutes count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "training_sessions"
                ],
                "summary": "Updates a training session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Training Session ID",
                        "name": "trainingSessionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/training_sessions.UpdateTrainingSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/training_sessions.UpdateTrainingSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        },
        "/{version}/trainings": {
            "get": {
                "description": "Get training plans with pagination, optionally filtered by name, description, difficulty, duration and tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "training_plans"
                ],
                "summary": "Get traning plans with pagination",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Difficulty",
                        "name": "difficulty",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Trainer ID",
                        "name": "trainer_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Min Duration",
                        "name": "min_duration",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max Duration",
                        "name": "max_duration",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Tags",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Disabled",
                        "name": "disabled",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/trainings.GetTrainingsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new training plan with a name, description, difficulty, duration, exercises and tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "training_plans"
                ],
                "summary": "Creates a new training plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trainings.CreateTrainingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/trainings.CreateTrainingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        },
        "/{version}/trainings/favorites": {
            "get": {
                "description": "Gets favorite training plans for a user with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "training_plans"
                ],
                "summary": "Gets favorite training plans for a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        },
        "/{version}/trainings/{trainingID}/disable": {
            "delete": {
                "description": "Disables a training plan that had been enabled previously (or had never been disabled) given its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "training_plans"
                ],
                "summary": "Disables a training plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Training plan ID",
                        "name": "trainingID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        },
        "/{version}/trainings/{trainingID}/enable": {
            "post": {
                "description": "Enables a training plan that had been disabled previously given its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "training_plans"
                ],
                "summary": "Enables a training plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Training plan ID",
                        "name": "trainingID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        },
        "/{version}/trainings/{trainingID}/exercises": {
            "post": {
                "description": "Creates a new exercise for a given trainingID, validating the training creator.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Creates a new exercise",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the training to create the exercise for",
                        "name": "trainingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/exercises.CreateExerciseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/models.Exercise"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        },
        "/{version}/trainings/{trainingID}/exercises/{exerciseID}": {
            "get": {
                "description": "Get an exercise for a given trainingID and exerciseID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Get exercise",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the training to create the exercise for",
                        "name": "trainingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the exercise to delete",
                        "name": "exerciseID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/models.Exercise"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an exercise for a given trainingID and exerciseID, validating the training creator.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Delete an exercise",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the training to delete the exercise from",
                        "name": "trainingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the exercise to delete",
                        "name": "exerciseID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/exercises.DeleteExerciseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an exercise for a given trainingID and exerciseID, validating the training creator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Update exercise",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the training to update the exercise from",
                        "name": "trainingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the exercise to delete",
                        "name": "exerciseID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/exercises.UpdateExerciseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/models.Exercise"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        },
        "/{version}/trainings/{trainingID}/favorites": {
            "post": {
                "description": "Adds a training plan to favorites for a user given its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "training_plans"
                ],
                "summary": "Adds a training plan to favorites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Training plan ID",
                        "name": "trainingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.UserID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a training plan from favorites for a user given the training plan ID and the user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "training_plans"
                ],
                "summary": "Removes a training plan from favorites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Training plan ID",
                        "name": "trainingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.UserID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        },
        "/{version}/trainings/{trainingID}/reviews": {
            "get": {
                "description": "Get reviews of a training plan with pagination filtered by their score, comment or userID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Get reviews by different query params with pagination",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Training Plan ID",
                        "name": "trainingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "minimum score of the review",
                        "name": "min_score",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "maximum score of the review",
                        "name": "max_score",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comment of the review",
                        "name": "comment",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "userID of the review",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page number when getting with pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size when getting with pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/reviews.GetReviewsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new review with a comment and a score for a given trainingPlanID and userID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Creates a review for a training plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Training Plan ID",
                        "name": "trainingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reviews.CreateReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/models.Review"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        },
        "/{version}/trainings/{trainingID}/reviews/{reviewID}": {
            "get": {
                "description": "Gets a review for a given reviewID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Gets a review by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Training Plan ID",
                        "name": "trainingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Review ID",
                        "name": "reviewID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/models.Review"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a review for a given reviewID and trainingID given by the userID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Deletes a review",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Training Plan ID",
                        "name": "trainingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Review ID",
                        "name": "reviewID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reviews.DeleteReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates the comment and/or rating of a review given by a user for a training plan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Updates a review",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Training Plan ID",
                        "name": "trainingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Review ID",
                        "name": "reviewID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reviews.UpdateReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        },
        "/{version}/trainings{training_id}": {
            "put": {
                "description": "Updates a training plan with a name, description, difficulty, duration, exercises and tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "training_plans"
                ],
                "summary": "Updates a training plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Training ID",
                        "name": "trainingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trainings.UpdateTrainingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/models.TrainingPlan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a training plan for a given trainingID and validates that the user has permissions to do so",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "training_plans"
                ],
                "summary": "Deletes a training plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Training ID",
                        "name": "trainingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trainings.DeleteTrainingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "contracts.ErrPayload": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "contracts.ErrResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/contracts.ErrPayload"
                }
            }
        },
        "contracts.Pagination": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_rows": {
                    "type": "integer"
                }
            }
        },
        "exercises.CreateExerciseRequest": {
            "type": "object",
            "required": [
                "description",
                "title",
                "trainer_id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "trainer_id": {
                    "type": "string"
                },
                "trainingPlanID": {
                    "type": "integer"
                }
            }
        },
        "exercises.DeleteExerciseRequest": {
            "type": "object",
            "required": [
                "trainer_id"
            ],
            "properties": {
                "exerciseID": {
                    "type": "integer"
                },
                "trainer_id": {
                    "type": "string"
                },
                "trainingPlanID": {
                    "type": "integer"
                }
            }
        },
        "exercises.UpdateExerciseRequest": {
            "type": "object",
            "required": [
                "trainer_id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "exerciseID": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "trainer_id": {
                    "type": "string"
                },
                "trainingPlanID": {
                    "type": "integer"
                }
            }
        },
        "goals.CreateGoalRequest": {
            "type": "object",
            "required": [
                "deadline",
                "title",
                "type",
                "user_id",
                "value"
            ],
            "properties": {
                "deadline": {
                    "type": "string"
                },
                "subtype": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "goals.DeleteGoalRequest": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "goalID": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "goals.GetGoalsResponse": {
            "type": "object",
            "properties": {
                "goals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Goal"
                    }
                }
            }
        },
        "goals.UpdateGoalRequest": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "deadline": {
                    "type": "string"
                },
                "goalID": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.Exercise": {
            "type": "object",
            "properties": {
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "trainingPlanID": {
                    "type": "integer"
                },
                "trainingPlanVersion": {
                    "type": "integer"
                }
            }
        },
        "models.ExerciseSession": {
            "type": "object",
            "properties": {
                "done": {
                    "type": "boolean"
                },
                "exercise": {
                    "$ref": "#/definitions/models.Exercise"
                },
                "exerciseID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "trainingSessionID": {
                    "type": "integer"
                }
            }
        },
        "models.Goal": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "progress": {
                    "type": "integer"
                },
                "subtype": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "models.Review": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "score": {
                    "type": "integer"
                },
                "trainingPlanID": {
                    "type": "integer"
                },
                "trainingPlanVersion": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.Tag": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.TrainingPlan": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "difficulty": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "duration": {
                    "type": "integer"
                },
                "exercises": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Exercise"
                    }
                },
                "favoritesCount": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "meanScore": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "pictureUrl": {
                    "type": "string"
                },
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Review"
                    }
                },
                "sessionsCount": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "trainerID": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "models.TrainingSession": {
            "type": "object",
            "properties": {
                "done": {
                    "type": "boolean"
                },
                "exerciseSessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ExerciseSession"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "secondsCount": {
                    "type": "integer"
                },
                "stepCount": {
                    "type": "integer"
                },
                "trainingPlan": {
                    "$ref": "#/definitions/models.TrainingPlan"
                },
                "trainingPlanID": {
                    "type": "integer"
                },
                "trainingPlanVersion": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "bornAt": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "displayName": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserInterest"
                    }
                },
                "isMale": {
                    "type": "boolean"
                },
                "isVerifiedTrainer": {
                    "type": "boolean"
                },
                "mainLocation": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "pictureUrl": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "models.UserInterest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "reviews.CreateReviewRequest": {
            "type": "object",
            "required": [
                "score",
                "user_id"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "trainingPlanID": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "reviews.DeleteReviewRequest": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "reviewID": {
                    "type": "integer"
                },
                "trainingPlanID": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "reviews.GetReviewsResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/contracts.Pagination"
                },
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Review"
                    }
                }
            }
        },
        "reviews.UpdateReviewRequest": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "reviewID": {
                    "type": "integer"
                },
                "score": {
                    "type": "integer"
                },
                "trainingPlanID": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "training_sessions.CreateTrainingSessionResponse": {
            "type": "object",
            "properties": {
                "training_session": {
                    "$ref": "#/definitions/models.TrainingSession"
                }
            }
        },
        "training_sessions.GetTrainingSessionsResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_rows": {
                    "type": "integer"
                },
                "training_sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TrainingSession"
                    }
                }
            }
        },
        "training_sessions.UpdateExerciseSessionRequest": {
            "type": "object",
            "required": [
                "done",
                "id"
            ],
            "properties": {
                "done": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "training_sessions.UpdateTrainingSessionRequest": {
            "type": "object",
            "required": [
                "done",
                "exercise_sessions",
                "requester_id",
                "seconds_count",
                "step_count"
            ],
            "properties": {
                "done": {
                    "type": "boolean"
                },
                "exercise_sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/training_sessions.UpdateExerciseSessionRequest"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "requester_id": {
                    "type": "string"
                },
                "seconds_count": {
                    "type": "integer"
                },
                "step_count": {
                    "type": "integer"
                }
            }
        },
        "training_sessions.UpdateTrainingSessionResponse": {
            "type": "object",
            "properties": {
                "training_session": {
                    "$ref": "#/definitions/models.TrainingSession"
                }
            }
        },
        "trainings.CreateTrainingRequest": {
            "type": "object",
            "required": [
                "description",
                "difficulty",
                "duration",
                "exercises",
                "name",
                "trainer_id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "difficulty": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "exercises": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/trainings.ExerciseRequest"
                    }
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "trainer_id": {
                    "type": "string"
                }
            }
        },
        "trainings.CreateTrainingResponse": {
            "type": "object",
            "properties": {
                "training_plan": {
                    "$ref": "#/definitions/models.TrainingPlan"
                }
            }
        },
        "trainings.DeleteTrainingRequest": {
            "type": "object",
            "required": [
                "trainer_id"
            ],
            "properties": {
                "trainer_id": {
                    "type": "string"
                },
                "trainingPlanID": {
                    "type": "integer"
                }
            }
        },
        "trainings.ExerciseRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "trainings.GetTrainingsResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/contracts.Pagination"
                },
                "trainings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TrainingPlan"
                    }
                }
            }
        },
        "trainings.UpdateTrainingRequest": {
            "type": "object",
            "required": [
                "description",
                "difficulty",
                "duration",
                "exercises",
                "name",
                "trainer_id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "difficulty": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "exercises": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/trainings.ExerciseRequest"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "trainer_id": {
                    "type": "string"
                }
            }
        },
        "users.UserID": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "dev",
	Host:             "fiufit-trainings.fly.dev",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Fiufit Trainings API",
	Description:      "Fiufit's Trainings service documentation. This service manages training plans and its sessions, goals and reviews, etc.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
