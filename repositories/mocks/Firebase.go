// Code generated by mockery v2.26.1. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/fiufit/trainings/models"
	mock "github.com/stretchr/testify/mock"
)

// Firebase is an autogenerated mock type for the Firebase type
type Firebase struct {
	mock.Mock
}

// FillTrainingPicture provides a mock function with given fields: ctx, training
func (_m *Firebase) FillTrainingPicture(ctx context.Context, training *models.TrainingPlan) {
	_m.Called(ctx, training)
}

// GetTrainingPictureUrl provides a mock function with given fields: ctx, trainingID, trainerID
func (_m *Firebase) GetTrainingPictureUrl(ctx context.Context, trainingID uint, trainerID string) string {
	ret := _m.Called(ctx, trainingID, trainerID)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, uint, string) string); ok {
		r0 = rf(ctx, trainingID, trainerID)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewFirebase interface {
	mock.TestingT
	Cleanup(func())
}

// NewFirebase creates a new instance of Firebase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFirebase(t mockConstructorTestingTNewFirebase) *Firebase {
	mock := &Firebase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
