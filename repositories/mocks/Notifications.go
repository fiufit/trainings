// Code generated by mockery v2.26.1. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/fiufit/trainings/models"
	mock "github.com/stretchr/testify/mock"
)

// Notifications is an autogenerated mock type for the Notifications type
type Notifications struct {
	mock.Mock
}

// SendGoalNotification provides a mock function with given fields: ctx, goal
func (_m *Notifications) SendGoalNotification(ctx context.Context, goal models.Goal) error {
	ret := _m.Called(ctx, goal)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, models.Goal) error); ok {
		r0 = rf(ctx, goal)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewNotifications interface {
	mock.TestingT
	Cleanup(func())
}

// NewNotifications creates a new instance of Notifications. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewNotifications(t mockConstructorTestingTNewNotifications) *Notifications {
	mock := &Notifications{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
