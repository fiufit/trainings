// Code generated by mockery v2.26.1. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/fiufit/trainings/models"
	mock "github.com/stretchr/testify/mock"
)

// TrainingPlans is an autogenerated mock type for the TrainingPlans type
type TrainingPlans struct {
	mock.Mock
}

// CreateTrainingPlan provides a mock function with given fields: ctx, training
func (_m *TrainingPlans) CreateTrainingPlan(ctx context.Context, training models.TrainingPlan) (models.TrainingPlan, error) {
	ret := _m.Called(ctx, training)

	var r0 models.TrainingPlan
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, models.TrainingPlan) (models.TrainingPlan, error)); ok {
		return rf(ctx, training)
	}
	if rf, ok := ret.Get(0).(func(context.Context, models.TrainingPlan) models.TrainingPlan); ok {
		r0 = rf(ctx, training)
	} else {
		r0 = ret.Get(0).(models.TrainingPlan)
	}

	if rf, ok := ret.Get(1).(func(context.Context, models.TrainingPlan) error); ok {
		r1 = rf(ctx, training)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTrainingPlans interface {
	mock.TestingT
	Cleanup(func())
}

// NewTrainingPlans creates a new instance of TrainingPlans. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTrainingPlans(t mockConstructorTestingTNewTrainingPlans) *TrainingPlans {
	mock := &TrainingPlans{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
